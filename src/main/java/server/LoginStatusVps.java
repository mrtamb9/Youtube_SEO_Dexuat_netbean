/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import controls.ServerControls;
import database.mysql.SystemInfo;
import java.awt.event.KeyEvent;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

/**
 *
 * @author thanhtam
 */
public class LoginStatusVps extends javax.swing.JFrame {

    /**
     * Creates new form LoginFrame
     */
    public boolean checkLogin = false;

    public LoginStatusVps() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        btn_login = new javax.swing.JButton();
        tf_password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Status VPS");

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        tf_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_passwordKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_passwordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_username)
                    .addComponent(tf_password, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_login, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        String username = tf_username.getText().trim();
        String password = tf_password.getText();

//        if (username.compareTo("nguyen") != 0) {
//            SystemInfo.dbName = SystemInfo.dbName + "_" + username;
//        }

        System.out.println(SystemInfo.dbName);

        if (username.length() > 0 && password.length() > 0) {
            try {
                checkLogin = ServerControls.checkLogin(username, password);
                if (checkLogin == false) {
                    JOptionPane.showMessageDialog(null, "Fail!");
                } else {
                    this.hide();
                    ThreadFrameStatusVps threadFrameStatus = new ThreadFrameStatusVps();
                    ExecutorService executor = Executors.newFixedThreadPool(1);
                    executor.execute(threadFrameStatus);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Fail!");
            }
        }

    }//GEN-LAST:event_btn_loginActionPerformed

    private void tf_passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_passwordKeyTyped

    }//GEN-LAST:event_tf_passwordKeyTyped

    public class ThreadFrameStatusVps implements Runnable {

        FrameStatusVps myUI;

        public ThreadFrameStatusVps() {
            System.out.println("ShowStatusVps");
            myUI = new FrameStatusVps();
            myUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            myUI.setLocationRelativeTo(null);
            myUI.setVisible(true);
        }

        public void run() {
            while (true) {
                ServerControls myControler = new ServerControls();
                try {
                    myControler.getAllAccountFromMySQL();

                    // list all ip
                    {
                        int listIpSize = myControler.listIps.size();
                        int index = myUI.jlIp.getLastVisibleIndex();
                        if (index > listIpSize) {
                            index = listIpSize;
                        }
                        int selectedIndex = myUI.jlIp.getSelectedIndex();

                        String arrayStrings[] = new String[myControler.listInfos.size() + 1];
                        arrayStrings[0] = "0.     0.0.0.0     SUPER IP ADDRESS";
                        for (int i = 0; i < listIpSize; i++) {
                            String tempString = myControler.listInfos.get(i);
                            arrayStrings[i + 1] = (i + 1) + ".     " + tempString;
                        }
                        myUI.jlIp.setListData(new String[0]);
                        Thread.sleep(1);
                        myUI.jlIp.setListData(arrayStrings);
                        myUI.jlIp.ensureIndexIsVisible(index);
                        if (selectedIndex >= 0) {
                            myUI.jlIp.setSelectedIndex(selectedIndex);
                        }
                    }

                    // list warning ip
                    {
                        int listIpSize = myControler.listWarning.size();
                        int index = myUI.jlIpWarning.getLastVisibleIndex();
                        if (index > listIpSize) {
                            index = listIpSize;
                        }
                        int selectedIndex = myUI.jlIpWarning.getSelectedIndex();

                        String arrayStrings[] = new String[myControler.listWarning.size() + 1];
                        arrayStrings[0] = "0.     0.0.0.0     SUPER IP ADDRESS";
                        for (int i = 0; i < listIpSize; i++) {
                            String tempString = myControler.listWarning.get(i);
                            arrayStrings[i + 1] = (i + 1) + ".     " + tempString;
                        }
                        myUI.jlIpWarning.setListData(new String[0]);
                        Thread.sleep(1);
                        myUI.jlIpWarning.setListData(arrayStrings);
                        myUI.jlIpWarning.ensureIndexIsVisible(index);
                        if (selectedIndex >= 0) {
                            myUI.jlIpWarning.setSelectedIndex(selectedIndex);
                        }
                    }

                    Thread.sleep(5000);
                } catch (Exception e) {
                    System.out.println("Error thread load all ip!");
                }
            }
        }
    }

    private void tf_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_passwordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String username = tf_username.getText().trim();
            String password = tf_password.getText();

//            if (username.compareTo("nguyen") != 0) {
//                SystemInfo.dbName = SystemInfo.dbName + "_" + username;
//            }

            System.out.println(SystemInfo.dbName);

            if (username.length() > 0 && password.length() > 0) {
                try {
                    checkLogin = ServerControls.checkLogin(username, password);
                    if (checkLogin == false) {
                        JOptionPane.showMessageDialog(null, "Fail!");
                    } else {
                        this.hide();
                        ThreadFrameStatusVps threadFrameStatus = new ThreadFrameStatusVps();
                        ExecutorService executor = Executors.newFixedThreadPool(1);
                        executor.execute(threadFrameStatus);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Fail!");
                }
            }
        }
    }//GEN-LAST:event_tf_passwordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginStatusVps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginStatusVps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginStatusVps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginStatusVps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginStatusVps myLogin = new LoginStatusVps();
                myLogin.setVisible(true);
                myLogin.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField tf_password;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables
}
